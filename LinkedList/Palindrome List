# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param A : head node of linked list
    # @return an integer
    def lPalin(self, A):
        count = 0
        temp = A
        prev = None
        curr = A
        while temp is not None:
            count += 1
            temp = temp.next
            
        for i in range(count/2):
            fut = curr.next
            curr.next = prev
            prev = curr
            curr = fut
            
        if(count%2 != 0):
            curr = curr.next
            
        while prev is not None and curr is not None:
            if prev.val != curr.val:
                return 0
            else:
                prev = prev.next
                curr = curr.next
                
        return 1
